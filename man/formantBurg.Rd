% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/formantBurg.R
\name{formantBurg}
\alias{formantBurg}
\title{Estimate formant values using the Burg algorithm}
\usage{
formantBurg(
  filename,
  output = "ssff",
  ext = ".wav",
  timeStep = NULL,
  start = NULL,
  end = NULL,
  times = NULL,
  maxNoFormants = 5,
  maxFormant = 5500,
  windowLength = 0.025,
  preEmphFrom = 50,
  returnBw = FALSE,
  returnIntensity = FALSE,
  track = NULL,
  refF1 = 550,
  refF2 = 1650,
  refF3 = 2750,
  refF4 = 3850,
  refF5 = 4950,
  freqCost = 1,
  bwCost = 1,
  transitionCost = 1,
  toFile = FALSE,
  outputDir = getwd(),
  outputExt = ".fmt"
)
}
\arguments{
\item{filename}{String giving the path to an audio file or a directory of
audio files. Alternatively a vector of strings giving the paths to audio
files.}

\item{output}{String giving the desired output format. Should be either
`ssff` (default) for a list with the Simple Signal File Format or `df` for a
data frame.}

\item{ext}{String giving the file extension for audio files; default is
`.wav`. Only used if `filename` is a directory.}

\item{timeStep}{Numeric giving the desired sampling frequency in
seconds. Default is
`NULL`, in which case `timeStep` corresponds to `windowLength * 0.25`.}

\item{start}{Numeric giving the desired start time of analysis in
seconds. Default is `NULL`, equivalent to the start of the audio file.}

\item{end}{Numeric giving the desired end time of analysis in seconds.
Default is `NULL`, equivalent to the duration of the audio file.}

\item{times}{Optional numeric vector giving the times to return signal
values from. Default is `NULL`.}

\item{maxNoFormants}{Integer giving the maximum number of formants to
estimate. Default is `5`.}

\item{maxFormant}{Numeric giving the upper bound of the frequency range
where formants are searched for in Hz. Default is `5500`.}

\item{windowLength}{Numeric giving the desired window length in seconds.
Default is `0.025`.}

\item{preEmphFrom}{Numeric giving the lower frequency bound used for
spectral pre-emphasis. Default is `50`.}

\item{returnBw}{Boolean; should formant bandwidths be returned? Default is
`FALSE`.}

\item{returnIntensity}{Boolean; should intensity values be returned?
Default is `FALSE`.}

\item{track}{Numeric giving the number of formants to return if a Viterbi
tracking algorithm is applied to the output. Default is `NULL`, in which
case Viterbi tracking isn't applied.}

\item{refF1}{Numeric giving the reference frequency for F1 to be used for
Viterbi tracking. Default is `550`.}

\item{refF2}{Numeric giving the reference frequency for F2 to be used for
Viterbi tracking. Default is `1650`.}

\item{refF3}{Numeric giving the reference frequency for F3 to be used for
Viterbi tracking. Default is `2750`.}

\item{refF4}{Numeric giving the reference frequency for F4 to be used for
Viterbi tracking. Default is `3850`.}

\item{refF5}{Numeric giving the reference frequency for F4 to be used for
Viterbi tracking. Default is `4950`.}

\item{freqCost}{Numeric specifying the local cost of values deviating
from the reference frequency per kHz. Default is `1`. Only used with
Viterbi tracking.}

\item{bwCost}{Numeric specifying the cost of bandwidths relative to formant
frequency. Default is `1`. Only used with Viterbi tarcking.}

\item{transitionCost}{Numeric specifying the cost per octave of having
different consecutive formant values in a track. Default is `1`.
Only used with Viterbi tracking.}

\item{toFile}{Boolean; if the output format is `ssff`, should these
objects be saved to disk as individual files? Default is `FALSE`.}

\item{outputDir}{String giving the location of the output directory of
SSFF files when `toFile = TRUE`. Default is to use the current working
directory.}

\item{outputExt}{String giving the file extension of SSFF files when
`toFile = TRUE`. Default is `.fmt`.}
}
\value{
A list of class `AsspDataObj` or data frame depending on the value
of `output`.
}
\description{
Wrapper for Praat procedure that estimates formant values from an audio file
or list of audio files.
}
\examples{
datapath <- system.file('extdata', package='praatutils')
soundFile <- paste0(datapath, '/1.wav')
fmt <- formantBurg(soundFile)
}
