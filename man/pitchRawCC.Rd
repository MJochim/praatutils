% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pitchRawCC.R
\name{pitchRawCC}
\alias{pitchRawCC}
\title{Estimate pitch using raw crosscorrelation}
\usage{
pitchRawCC(
  filename,
  output = "ssff",
  ext = ".wav",
  timeStep = NULL,
  start = NULL,
  end = NULL,
  times = NULL,
  floor = 75,
  ceiling = 600,
  maxNoCandidates = 15,
  gaussianWindow = FALSE,
  silenceThreshold = 0.03,
  voicingThreshold = 0.45,
  octaveCost = 0.01,
  octaveJumpCost = 0.35,
  voicedUnvoicedCost = 0.14,
  interpolate = FALSE,
  smoothingBW = NULL,
  killOctaveJumps = FALSE,
  toFile = FALSE,
  outputDir = getwd(),
  outputExt = ".f0"
)
}
\arguments{
\item{filename}{String giving the path to an audio file or a directory of
audio files. Alternatively a vector of strings giving the paths to audio
files.}

\item{output}{String giving the desired output format. Should be either
`ssff` (default) for a list with the Simple Signal File Format, `df` for a
data frame, or `candidates` for a long data frame listing all pitch
candidates.}

\item{ext}{String giving the file extension for audio files; default is
`.wav`. Only used if `filename` is a directory.}

\item{timeStep}{Numeric giving the desired sampling frequency in
seconds. Default is
`NULL`, in which case `timeStep` corresponds to `0.25 / floor`.}

\item{start}{Numeric giving the desired start time of analysis in
seconds. Default is `NULL`, equivalent to the start of the audio file.}

\item{end}{Numeric giving the desired end time of analysis in seconds.
Default is `NULL`, equivalent to the duration of the audio file.}

\item{times}{Optional numeric vector giving the times to return signal
values from. Default is `NULL`.}

\item{floor}{Numeric giving the lowest expected pitch frequency in Hz.
Default is `75`.}

\item{ceiling}{Numeric giving the highest expected pitch frequency in Hz.
Default is `600`.}

\item{maxNoCandidates}{Integer giving the highest number of pitch candidates
to estimate. Default is `15`.}

\item{gaussianWindow}{Boolean; should a Gaussian window with a physical
length of 6 pitch cycles be used for windowing the signal? Default is
`FALSE`, in which case a Hanning window with a physical length of 3 pitch
cycles is used.}

\item{silenceThreshold}{Numeric giving threshold for when to consider frames
silent. Default is `0.03` relative to the global maximum amplitude.}

\item{voicingThreshold}{Numeric giving threshold above which pitch candidates
will be consider voiced relative to the maximum autocorrelation in the
signal. Default is `0.45`.}

\item{octaveCost}{Numeric giving the degree to which high-frequency
candidates are favored relative to the maximum autocorrelation in the signal.
Default is `0.01` per octave.}

\item{octaveJumpCost}{Numeric giving the degree to which pitch changes are
disfavored relative to the maximum autocorrelation in the signal. Default is
`0.35`.}

\item{voicedUnvoicedCost}{Numeric giving the degree to which transitions
in voicing status are disfavored relative to the maximum autocorrelation in
the signal. Default is `0.14`.}

\item{interpolate}{Boolean; should Praat's interpolation routine be applied
to the resulting Pitch object? Default is `FALSE`.}

\item{smoothingBW}{Numeric giving the bandwidth frequency in Hz to be used
for smoothing the pitch track. Default is `NULL`, in which case the pitch
track is not smoothed.}

\item{killOctaveJumps}{Boolean; should Praat's routine for removing octave
jumps be applied to the resulting Pitch object? Default is `FALSE`.}

\item{toFile}{Boolean; if the output format is `ssff`, should these
objects be saved to disk as individual files? Default is `FALSE`.}

\item{outputDir}{String giving the location of the output directory of
SSFF files when `toFile = TRUE`. Default is to use the current working
directory.}

\item{outputExt}{String giving the file extension of SSFF files when
`toFile = TRUE`. Default is `.fmt`.}
}
\value{
A list of class `AsspDataObj` or data frame depending on the value
of `output`.
}
\description{
Wrapper for Praat procedure that estimates pitch
values from an audio file or list of audio files based on the raw
crosscorrelation of the signal.
}
\examples{
datapath <- system.file('extdata', package='praatutils')
soundFile <- paste0(datapath, '/1.wav')
pitch <- pitchRawCC(soundFile)
}
