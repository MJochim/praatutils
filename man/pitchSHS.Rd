% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pitchSHS.R
\name{pitchSHS}
\alias{pitchSHS}
\title{Estimate pitch using a spectral compression model}
\usage{
pitchSHS(
  filename,
  output = "ssff",
  ext = ".wav",
  timeStep = 0.01,
  start = NULL,
  end = NULL,
  times = NULL,
  floor = 50,
  ceiling = 600,
  maxNoCandidates = 15,
  maxFreqComponent = 1250,
  maxNoSubharmonics = 15,
  compressionFactor = 0.84,
  pointsPerOctave = 48,
  interpolate = FALSE,
  smoothingBW = NULL,
  killOctaveJumps = FALSE,
  toFile = FALSE,
  outputDir = getwd(),
  outputExt = ".f0"
)
}
\arguments{
\item{filename}{String giving the path to an audio file or a directory of
audio files. Alternatively a vector of strings giving the paths to audio
files.}

\item{output}{String giving the desired output format. Should be either
`ssff` (default) for a list with the Simple Signal File Format, `df` for a
data frame, or `candidates` for a long data frame listing all pitch
candidates.}

\item{ext}{String giving the file extension for audio files; default is
`.wav`. Only used if `filename` is a directory.}

\item{timeStep}{Numeric giving the desired sampling frequency in
seconds. Default is `0.01`.}

\item{start}{Numeric giving the desired start time of analysis in
seconds. Default is `NULL`, equivalent to the start of the audio file.}

\item{end}{Numeric giving the desired end time of analysis in seconds.
Default is `NULL`, equivalent to the duration of the audio file.}

\item{times}{Optional numeric vector giving the times to return signal
values from. Default is `NULL`.}

\item{floor}{Numeric giving the lowest expected pitch frequency in Hz.
Default is `50`.}

\item{ceiling}{Numeric giving the highest expected pitch frequency in Hz.
Default is `600`.}

\item{maxNoCandidates}{Integer giving the highest number of pitch candidates
to estimate. Default is `15`.}

\item{maxFreqComponent}{Numeric giving the highest frequency in Hz to be
used for the spectral compression model. Default is `1250`.}

\item{maxNoSubharmonics}{Integer giving the highest number of subcomponents
that add up to the estimated pitch. Default is `15`.}

\item{compressionFactor}{Numeric giving the factor by which successive
compressed spectra are multiplied before the summation. Default is `0.84`.}

\item{pointsPerOctave}{Integer giving the sampling density of the log
frequency scale. Default is `48`.}

\item{interpolate}{Boolean; should Praat's interpolation routine be applied
to the resulting Pitch object? Default is `FALSE`.}

\item{smoothingBW}{Numeric giving the bandwidth frequency in Hz to be used
for smoothing the pitch track. Default is `NULL`, in which case the pitch
track is not smoothed.}

\item{killOctaveJumps}{Boolean; should Praat's routine for removing octave
jumps be applied to the resulting Pitch object? Default is `FALSE`.}

\item{toFile}{Boolean; if the output format is `ssff`, should these
objects be saved to disk as individual files? Default is `FALSE`.}

\item{outputDir}{String giving the location of the output directory of
SSFF files when `toFile = TRUE`. Default is to use the current working
directory.}

\item{outputExt}{String giving the file extension of SSFF files when
`toFile = TRUE`. Default is `.fmt`.}
}
\value{
A list of class `AsspDataObj` or data frame depending on the value
of `output`.
}
\description{
Wrapper for Praat procedure that estimates pitch
values from an audio file or list of audio files based on the summation
of a series of harmonically compressed spectra
}
\examples{
datapath <- system.file('extdata', package='praatutils')
soundFile <- paste0(datapath, '/1.wav')
pitch <- pitchSHS(soundFile)
}
